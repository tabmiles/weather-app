{"ast":null,"code":"import axios from 'axios';\nexport const store = {\n  location: {},\n  weather: {},\n  async getLocation() {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(position => resolve(position.coords), error => reject(error));\n    });\n  },\n  async getWeather(latitude, longitude) {\n    // FUTURE: add more customization options: C vs F\n    const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&daily=sunrise,sunset,weather_code,temperature_2m_max,temperature_2m_min&hourly=temperature_2m,weather_code&current=temperature_2m,weather_code,is_day&timezone=auto&forecast_days=3&timeformat=unixtime&wind_speed_unit=mph&temperature_unit=fahrenheit&precipitation_unit=inch`);\n    return response;\n  },\n  async initialize() {\n    this.location = await this.getLocation();\n    this.weather = await this.getWeather(this.location.latitude, this.location.longitude);\n  }\n};","map":{"version":3,"names":["axios","store","location","weather","getLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","coords","error","getWeather","latitude","longitude","response","get","initialize"],"sources":["C:/Users/Tabitha/projects/weather-app/app/src/shared/store.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport const store = {\r\n    location: {},\r\n    weather: {},\r\n    async getLocation() {\r\n        return new Promise((resolve, reject) => {\r\n            navigator.geolocation.getCurrentPosition(\r\n                position => resolve(position.coords),\r\n                error => reject(error)\r\n            );\r\n        });\r\n    },\r\n    async getWeather(latitude, longitude) {\r\n        // FUTURE: add more customization options: C vs F\r\n        const response = await axios.get(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&daily=sunrise,sunset,weather_code,temperature_2m_max,temperature_2m_min&hourly=temperature_2m,weather_code&current=temperature_2m,weather_code,is_day&timezone=auto&forecast_days=3&timeformat=unixtime&wind_speed_unit=mph&temperature_unit=fahrenheit&precipitation_unit=inch`)\r\n        return response\r\n    },\r\n    async initialize() {\r\n        this.location = await this.getLocation()\r\n        this.weather = await this.getWeather(this.location.latitude, this.location.longitude)\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAG;EACjBC,QAAQ,EAAE,CAAC,CAAC;EACZC,OAAO,EAAE,CAAC,CAAC;EACX,MAAMC,WAAWA,CAAA,EAAG;IAChB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCC,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACpCC,QAAQ,IAAIL,OAAO,CAACK,QAAQ,CAACC,MAAM,CAAC,EACpCC,KAAK,IAAIN,MAAM,CAACM,KAAK,CACzB,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EACD,MAAMC,UAAUA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IAClC;IACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,mDAAmDH,QAAQ,cAAcC,SAAS,kRAAkR,CAAC;IACtY,OAAOC,QAAQ;EACnB,CAAC;EACD,MAAME,UAAUA,CAAA,EAAG;IACf,IAAI,CAACjB,QAAQ,GAAG,MAAM,IAAI,CAACE,WAAW,CAAC,CAAC;IACxC,IAAI,CAACD,OAAO,GAAG,MAAM,IAAI,CAACW,UAAU,CAAC,IAAI,CAACZ,QAAQ,CAACa,QAAQ,EAAE,IAAI,CAACb,QAAQ,CAACc,SAAS,CAAC;EACzF;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}