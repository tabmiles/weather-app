{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"background-color\": \"lightpink\"\n  },\n  id: \"windowAreaWrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"p\", null, \"Weather Type\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Current weather: \" + _toDisplayString(this.type), 1 /* TEXT */)])]);\n}","map":{"version":3,"names":["style","id","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","type"],"sources":["C:\\Users\\Tabitha\\projects\\weather-app\\app\\src\\components\\WindowArea.vue"],"sourcesContent":["<template>\n  <div style=\"background-color:lightpink;\" id=\"windowAreaWrapper\">\n    <div>\n      <p>Weather Type</p>\n      <p>Current weather: {{ this.type }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'WindowArea',\n  components: {\n    Character\n  },\n  data () {\n    return {\n      type: null,\n      typeCode: null\n    }\n  },\n  methods: {\n    setWeather(weather) {\n      console.log('[WindowArea] Weather code: ', weather.data.current.weather_code);\n      if(this.typeCode === weather.data.current.weather_code) {\n        // NOOP for no update to type\n        return;\n      }\n      this.typeCode = weather.data.current.weather_code;\n      switch (weather.data.current.weather_code) {\n        // TODO: handle background based on weather type\n        case 0:\n          this.type = 'Clear';\n          break;\n        case 1:\n          this.type = 'Mainly Cloudy';\n          break;\n        case 2:\n          this.type = 'Partly Cloudy';\n          break;\n        case 3:\n          this.type = 'Overcast';\n          break;\n        case 45:\n        case 48:\n          this.type = 'Fog';\n          break;\n        case 51:\n          this.type = 'Light Drizzle';\n          break;\n        case 53:\n          this.type = 'Moderate Drizzle';\n          break;\n        case 55:\n          this.type = 'Heavy Drizzle';\n          break;\n        case 56:\n        case 57:\n          this.type = 'Freezing Drizzle';\n          break;\n        case 61:\n          this.type = 'Light Rain';\n          break;\n        case 63:\n          this.type = 'Moderate Rain';\n          break;\n        case 65:\n          this.type = 'Heavy Rain';\n          break;\n        case 66:\n        case 67:\n          this.type = 'Freezing Rain Showers';\n          break;\n        case 71:\n          this.type = 'Light Snow';\n          break;\n        case 73:\n          this.type = 'Moderate Snow';\n          break;\n        case 75:\n          this.type = 'Heavy Snow';\n          break;\n        case 80:\n          this.type = 'Light Rain Showers';\n          break;\n        case 81:\n          this.type = 'Moderate Rain Showers';\n          break;\n        case 82:\n          this.type = 'Heavy Rain Showers';\n          break;\n        case 85:\n          this.type = 'Light Snow Showers';\n          break;\n        case 86:\n          this.type = 'Heavy Snow Showers';\n          break;\n        default:\n          this.type = 'Unknown';\n          break;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n#windowAreaWrapper {\n  grid-area: windowArea;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 30% 70%;\n}\n</style>\n"],"mappings":";;EACOA,KAAmC,EAAnC;IAAA;EAAA,CAAmC;EAACC,EAAE,EAAC;;;uBAA5CC,mBAAA,CAKM,OALNC,UAKM,GAJJC,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAmB,WAAhB,cAAY,sBACfA,mBAAA,CAAuC,WAApC,mBAAiB,GAAAC,gBAAA,MAAQC,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}