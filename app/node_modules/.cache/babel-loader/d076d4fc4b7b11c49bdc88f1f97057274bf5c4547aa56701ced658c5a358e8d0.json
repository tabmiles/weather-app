{"ast":null,"code":"import OverallWeather from './components/OverallWeather.vue';\nimport WeatherType from './components/WeatherType.vue';\nimport WeekForcast from './components/WeekForcast.vue';\nimport { store } from './shared/store';\nexport default {\n  name: 'App',\n  components: {\n    WeatherType,\n    OverallWeather,\n    WeekForcast\n  },\n  data() {\n    return {\n      latitude: null,\n      longitude: null,\n      location: null\n    };\n  },\n  async mounted() {\n    const location = await store.getLocation();\n    console.log('[App] Location: ', location);\n    this.latitude = location.latitude;\n    this.longitude = location.longitude;\n\n    // TODO: add time to consistently update weather\n    const weather = await store.getWeather(this.latitude, this.longitude);\n    console.log('[App] Weather: ', weather);\n    this.$refs.OverallWeather.setWeather(weather);\n    this.$refs.WeatherType.setWeather(weather);\n  }\n};","map":{"version":3,"names":["OverallWeather","WeatherType","WeekForcast","store","name","components","data","latitude","longitude","location","mounted","getLocation","console","log","weather","getWeather","$refs","setWeather"],"sources":["C:\\Users\\Tabitha\\projects\\weather-app\\app\\src\\App.vue"],"sourcesContent":["<template>\n  <OverallWeather ref=\"OverallWeather\"/>\n  <WeatherType ref=\"WeatherType\"/>\n  <WeekForcast ref=\"WeekForcast\"/>\n</template>\n\n<script>\nimport OverallWeather from './components/OverallWeather.vue';\nimport WeatherType from './components/WeatherType.vue'\nimport WeekForcast from './components/WeekForcast.vue';\nimport { store } from './shared/store';\n\nexport default {\n  name: 'App',\n  components: {\n    WeatherType,\n    OverallWeather,\n    WeekForcast,\n  },\n  data() {\n    return {\n      latitude: null,\n      longitude: null,\n      location: null\n    }\n  },\n  async mounted() {\n    const location = await store.getLocation();\n    console.log('[App] Location: ', location);\n    this.latitude = location.latitude;\n    this.longitude = location.longitude;\n\n    // TODO: add time to consistently update weather\n    const weather = await store.getWeather(this.latitude, this.longitude);\n    console.log('[App] Weather: ', weather);\n    this.$refs.OverallWeather.setWeather(weather);\n    this.$refs.WeatherType.setWeather(weather);\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n\n  display: grid;\n  grid-template-columns: 40% 60%;\n  grid-template-rows: 1fr 1fr;\n  grid-template-areas:\n    \"overallWeather weatherType\"\n    \"weekForcast weatherType\";\n}\n</style>\n"],"mappings":"AAOA,OAAOA,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,WAAU,MAAO,8BAA6B;AACrD,OAAOC,WAAU,MAAO,8BAA8B;AACtD,SAASC,KAAI,QAAS,gBAAgB;AAEtC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVJ,WAAW;IACXD,cAAc;IACdE;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMD,QAAO,GAAI,MAAMN,KAAK,CAACQ,WAAW,CAAC,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAAC;IACzC,IAAI,CAACF,QAAO,GAAIE,QAAQ,CAACF,QAAQ;IACjC,IAAI,CAACC,SAAQ,GAAIC,QAAQ,CAACD,SAAS;;IAEnC;IACA,MAAMM,OAAM,GAAI,MAAMX,KAAK,CAACY,UAAU,CAAC,IAAI,CAACR,QAAQ,EAAE,IAAI,CAACC,SAAS,CAAC;IACrEI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,OAAO,CAAC;IACvC,IAAI,CAACE,KAAK,CAAChB,cAAc,CAACiB,UAAU,CAACH,OAAO,CAAC;IAC7C,IAAI,CAACE,KAAK,CAACf,WAAW,CAACgB,UAAU,CAACH,OAAO,CAAC;EAC5C;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}