{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"wallDecorations\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PictureFrame = _resolveComponent(\"PictureFrame\");\n  const _component_Calendar = _resolveComponent(\"Calendar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, \"TODO: clock with time: \" + _toDisplayString(this.time), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_createVNode(_component_PictureFrame, {\n    ref: \"Sunrise\",\n    type: \"sunrise\"\n  }, null, 512 /* NEED_PATCH */), _createVNode(_component_PictureFrame, {\n    ref: \"Sunset\",\n    type: \"sunset\"\n  }, null, 512 /* NEED_PATCH */)]), _createVNode(_component_Calendar)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","time","_createVNode","_component_PictureFrame","ref","type","_component_Calendar"],"sources":["C:\\Users\\Tabitha\\projects\\weather-app\\app\\src\\components\\WallDecorations.vue"],"sourcesContent":["<template>\r\n    <div id=\"wallDecorations\">\r\n      <div>\r\n        <p>TODO: clock with time: {{ this.time }}</p>\r\n      </div>\r\n      <div>\r\n        <PictureFrame ref=\"Sunrise\" type=\"sunrise\"/>\r\n        <PictureFrame ref=\"Sunset\" type=\"sunset\"/>\r\n      </div>\r\n      <Calendar/>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n\r\n  import Calendar from '../components/Calendar.vue';\r\n  import PictureFrame from './PictureFrame.vue';\r\n\r\n  export default {\r\n    name: 'WallDecorations',\r\n    components: {\r\n      Calendar,\r\n      PictureFrame\r\n    },\r\n    data () {\r\n        return {\r\n            temperature: '',\r\n            sunrise: '',\r\n            sunset: '',\r\n            time: ''\r\n        }\r\n    },\r\n    methods: {\r\n        setWeather(weather) {\r\n          // FUTURE: consider day in forecast\r\n          console.log('[WallDecorations] Weather: ', weather);\r\n          this.temperature = weather.data.current.temperature_2m;\r\n          this.sunrise = new Date(weather.data.daily.sunrise[0] * 1000).toLocaleTimeString(\"en-US\", {timeStyle: 'short'});\r\n          this.sunset = new Date(weather.data.daily.sunset[0] * 1000).toLocaleTimeString(\"en-US\", {timeStyle: 'short'});\r\n        }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n    #wallDecorations {\r\n      background-color: lightseagreen;\r\n      grid-area: wallDecorations;\r\n      grid-template-columns: 1fr;\r\n      grid-template-rows: 1fr 1fr 1fr;\r\n      display: grid;\r\n    }\r\n  </style>\r\n  "],"mappings":";;EACSA,EAAE,EAAC;AAAiB;;;;uBAAzBC,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,CAEM,cADJA,mBAAA,CAA6C,WAA1C,yBAAuB,GAAAC,gBAAA,MAAQC,IAAI,iB,GAExCF,mBAAA,CAGM,cAFJG,YAAA,CAA4CC,uBAAA;IAA9BC,GAAG,EAAC,SAAS;IAACC,IAAI,EAAC;kCACjCH,YAAA,CAA0CC,uBAAA;IAA5BC,GAAG,EAAC,QAAQ;IAACC,IAAI,EAAC;oCAElCH,YAAA,CAAWI,mBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}