{"ast":null,"code":"import WallDecorations from './components/WallDecorations.vue';\nimport WindowArea from './components/WindowArea.vue';\nimport { store } from './shared/store';\nexport default {\n  name: 'App',\n  components: {\n    WindowArea,\n    WallDecorations\n  },\n  data() {\n    return {\n      latitude: null,\n      longitude: null,\n      location: null\n    };\n  },\n  async mounted() {\n    const location = await store.getLocation();\n    console.log('[App] Location: ', location);\n    this.latitude = location.latitude;\n    this.longitude = location.longitude;\n    this.updateWeather();\n\n    // FUTURE: update weather every 5 minutes\n  },\n  methods: {\n    async updateWeather() {\n      console.log('[App] Update Weather');\n      const weather = await store.getWeather(this.latitude, this.longitude);\n      console.log('[App] Weather: ', weather);\n      this.$refs.WallDecorations.setWeather(weather);\n      this.$refs.WindowArea.setWeather(weather);\n    }\n  }\n};","map":{"version":3,"names":["WallDecorations","WindowArea","store","name","components","data","latitude","longitude","location","mounted","getLocation","console","log","updateWeather","methods","weather","getWeather","$refs","setWeather"],"sources":["C:\\Users\\Tabitha\\projects\\weather-app\\app\\src\\App.vue"],"sourcesContent":["<template>\n  <button @click=\"updateWeather\" ref=\"updateButton\" id=\"updateButton\"><svg fill=\"#000000\" height=\"20px\" width=\"20px\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 489.645 489.645\" xml:space=\"preserve\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"> <g> <path d=\"M460.656,132.911c-58.7-122.1-212.2-166.5-331.8-104.1c-9.4,5.2-13.5,16.6-8.3,27c5.2,9.4,16.6,13.5,27,8.3 c99.9-52,227.4-14.9,276.7,86.3c65.4,134.3-19,236.7-87.4,274.6c-93.1,51.7-211.2,17.4-267.6-70.7l69.3,14.5 c10.4,2.1,21.8-4.2,23.9-15.6c2.1-10.4-4.2-21.8-15.6-23.9l-122.8-25c-20.6-2-25,16.6-23.9,22.9l15.6,123.8 c1,10.4,9.4,17.7,19.8,17.7c12.8,0,20.8-12.5,19.8-23.9l-6-50.5c57.4,70.8,170.3,131.2,307.4,68.2 C414.856,432.511,548.256,314.811,460.656,132.911z\"></path> </g> </g></svg></button>\n  <WallDecorations ref=\"WallDecorations\"/>\n  <WindowArea ref=\"WindowArea\"/>\n</template>\n\n<script>\nimport WallDecorations from './components/WallDecorations.vue';\nimport WindowArea from './components/WindowArea.vue';\nimport { store } from './shared/store';\n\nexport default {\n  name: 'App',\n  components: {\n    WindowArea,\n    WallDecorations,\n  },\n  data() {\n    return {\n      latitude: null,\n      longitude: null,\n      location: null\n    }\n  },\n  async mounted() {\n    const location = await store.getLocation();\n    console.log('[App] Location: ', location);\n    this.latitude = location.latitude;\n    this.longitude = location.longitude;\n    this.updateWeather();\n\n    // FUTURE: update weather every 5 minutes\n  },\n  methods: {\n    async updateWeather() {\n      console.log('[App] Update Weather');\n      const weather = await store.getWeather(this.latitude, this.longitude);\n      console.log('[App] Weather: ', weather);\n      this.$refs.WallDecorations.setWeather(weather);\n      this.$refs.WindowArea.setWeather(weather);\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  height: 100%;\n\n  display: grid;\n  grid-template-columns: 40% 60%;\n  grid-template-rows: 1fr;\n  grid-template-areas:\n    \"wallDecorations windowArea\";\n  height: 500px;\n  width: 750px;\n}\n#updateButton {\n  position: absolute;\n  /* TODO: make small and two arrows in circle, light grey, low opacity */\n  background: none;\n}\n</style>\n"],"mappings":"AAOA,OAAOA,eAAc,MAAO,kCAAkC;AAC9D,OAAOC,UAAS,MAAO,6BAA6B;AACpD,SAASC,KAAI,QAAS,gBAAgB;AAEtC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVH,UAAU;IACVD;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMD,QAAO,GAAI,MAAMN,KAAK,CAACQ,WAAW,CAAC,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAAC;IACzC,IAAI,CAACF,QAAO,GAAIE,QAAQ,CAACF,QAAQ;IACjC,IAAI,CAACC,SAAQ,GAAIC,QAAQ,CAACD,SAAS;IACnC,IAAI,CAACM,aAAa,CAAC,CAAC;;IAEpB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpBF,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,MAAMG,OAAM,GAAI,MAAMb,KAAK,CAACc,UAAU,CAAC,IAAI,CAACV,QAAQ,EAAE,IAAI,CAACC,SAAS,CAAC;MACrEI,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEG,OAAO,CAAC;MACvC,IAAI,CAACE,KAAK,CAACjB,eAAe,CAACkB,UAAU,CAACH,OAAO,CAAC;MAC9C,IAAI,CAACE,KAAK,CAAChB,UAAU,CAACiB,UAAU,CAACH,OAAO,CAAC;IAC3C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}