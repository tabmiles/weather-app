{"ast":null,"code":"import CurrentTemp from './CurrentTemp.vue';\nexport default {\n  name: 'WindowArea',\n  components: {\n    CurrentTemp\n  },\n  data() {\n    return {\n      type: null,\n      typeCode: null\n    };\n  },\n  methods: {\n    setWeather(weather) {\n      console.log('[WindowArea] Weather code: ', weather.data.current.weather_code);\n      this.$refs.CurrentTemp.setCurrentTemp(weather.data.current.temperature_2m);\n      if (this.typeCode === weather.data.current.weather_code) {\n        // NOOP for no update to type\n        return;\n      }\n      this.typeCode = weather.data.current.weather_code;\n      switch (weather.data.current.weather_code) {\n        // TODO: handle background based on weather type\n        case 0:\n          this.type = 'Clear';\n          break;\n        case 1:\n          this.type = 'Mainly Cloudy';\n          break;\n        case 2:\n          this.type = 'Partly Cloudy';\n          break;\n        case 3:\n          this.type = 'Overcast';\n          break;\n        case 45:\n        case 48:\n          this.type = 'Fog';\n          break;\n        case 51:\n          this.type = 'Light Drizzle';\n          break;\n        case 53:\n          this.type = 'Moderate Drizzle';\n          break;\n        case 55:\n          this.type = 'Heavy Drizzle';\n          break;\n        case 56:\n        case 57:\n          this.type = 'Freezing Drizzle';\n          break;\n        case 61:\n          this.type = 'Light Rain';\n          break;\n        case 63:\n          this.type = 'Moderate Rain';\n          break;\n        case 65:\n          this.type = 'Heavy Rain';\n          break;\n        case 66:\n        case 67:\n          this.type = 'Freezing Rain Showers';\n          break;\n        case 71:\n          this.type = 'Light Snow';\n          break;\n        case 73:\n          this.type = 'Moderate Snow';\n          break;\n        case 75:\n          this.type = 'Heavy Snow';\n          break;\n        case 80:\n          this.type = 'Light Rain Showers';\n          break;\n        case 81:\n          this.type = 'Moderate Rain Showers';\n          break;\n        case 82:\n          this.type = 'Heavy Rain Showers';\n          break;\n        case 85:\n          this.type = 'Light Snow Showers';\n          break;\n        case 86:\n          this.type = 'Heavy Snow Showers';\n          break;\n        default:\n          this.type = 'Unknown';\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"names":["CurrentTemp","name","components","data","type","typeCode","methods","setWeather","weather","console","log","current","weather_code","$refs","setCurrentTemp","temperature_2m"],"sources":["C:\\Users\\Tabitha\\projects\\weather-app\\app\\src\\components\\WindowArea.vue"],"sourcesContent":["<template>\n  <div style=\"background-color:lightgrey;\" id=\"windowAreaWrapper\">\n    <div class=\"windowPane\">\n      <p>Current weather: {{ this.type }}</p>\n      <CurrentTemp ref=\"CurrentTemp\"/>\n    </div>\n    <div class=\"windowPane\">\n      <p>Sun or Moon</p>\n    </div>\n    <div class=\"windowPane\">\n      <p>Min and Max succulents</p>\n    </div>\n    <div class=\"windowPane\">\n      <p>Potted plant or mini person model dressed for weather</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CurrentTemp from './CurrentTemp.vue';\n\n\nexport default {\n  name: 'WindowArea',\n  components: {\n    CurrentTemp\n  },\n  data () {\n    return {\n      type: null,\n      typeCode: null\n    }\n  },\n  methods: {\n    setWeather(weather) {\n      console.log('[WindowArea] Weather code: ', weather.data.current.weather_code);\n      this.$refs.CurrentTemp.setCurrentTemp(weather.data.current.temperature_2m);\n      if(this.typeCode === weather.data.current.weather_code) {\n        // NOOP for no update to type\n        return;\n      }\n      this.typeCode = weather.data.current.weather_code;\n      switch (weather.data.current.weather_code) {\n        // TODO: handle background based on weather type\n        case 0:\n          this.type = 'Clear';\n          break;\n        case 1:\n          this.type = 'Mainly Cloudy';\n          break;\n        case 2:\n          this.type = 'Partly Cloudy';\n          break;\n        case 3:\n          this.type = 'Overcast';\n          break;\n        case 45:\n        case 48:\n          this.type = 'Fog';\n          break;\n        case 51:\n          this.type = 'Light Drizzle';\n          break;\n        case 53:\n          this.type = 'Moderate Drizzle';\n          break;\n        case 55:\n          this.type = 'Heavy Drizzle';\n          break;\n        case 56:\n        case 57:\n          this.type = 'Freezing Drizzle';\n          break;\n        case 61:\n          this.type = 'Light Rain';\n          break;\n        case 63:\n          this.type = 'Moderate Rain';\n          break;\n        case 65:\n          this.type = 'Heavy Rain';\n          break;\n        case 66:\n        case 67:\n          this.type = 'Freezing Rain Showers';\n          break;\n        case 71:\n          this.type = 'Light Snow';\n          break;\n        case 73:\n          this.type = 'Moderate Snow';\n          break;\n        case 75:\n          this.type = 'Heavy Snow';\n          break;\n        case 80:\n          this.type = 'Light Rain Showers';\n          break;\n        case 81:\n          this.type = 'Moderate Rain Showers';\n          break;\n        case 82:\n          this.type = 'Heavy Rain Showers';\n          break;\n        case 85:\n          this.type = 'Light Snow Showers';\n          break;\n        case 86:\n          this.type = 'Heavy Snow Showers';\n          break;\n        default:\n          this.type = 'Unknown';\n          break;\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n#windowAreaWrapper {\n  grid-area: windowArea;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: 1fr 1fr;\n  padding-bottom: 20px;\n}\n.windowPane {\n  outline: 2px black solid;\n}\n</style>\n"],"mappings":"AAmBA,OAAOA,WAAU,MAAO,mBAAmB;AAG3C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,OAAO,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,OAAO,CAACL,IAAI,CAACQ,OAAO,CAACC,YAAY,CAAC;MAC7E,IAAI,CAACC,KAAK,CAACb,WAAW,CAACc,cAAc,CAACN,OAAO,CAACL,IAAI,CAACQ,OAAO,CAACI,cAAc,CAAC;MAC1E,IAAG,IAAI,CAACV,QAAO,KAAMG,OAAO,CAACL,IAAI,CAACQ,OAAO,CAACC,YAAY,EAAE;QACtD;QACA;MACF;MACA,IAAI,CAACP,QAAO,GAAIG,OAAO,CAACL,IAAI,CAACQ,OAAO,CAACC,YAAY;MACjD,QAAQJ,OAAO,CAACL,IAAI,CAACQ,OAAO,CAACC,YAAY;QACvC;QACA,KAAK,CAAC;UACJ,IAAI,CAACR,IAAG,GAAI,OAAO;UACnB;QACF,KAAK,CAAC;UACJ,IAAI,CAACA,IAAG,GAAI,eAAe;UAC3B;QACF,KAAK,CAAC;UACJ,IAAI,CAACA,IAAG,GAAI,eAAe;UAC3B;QACF,KAAK,CAAC;UACJ,IAAI,CAACA,IAAG,GAAI,UAAU;UACtB;QACF,KAAK,EAAE;QACP,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,KAAK;UACjB;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,eAAe;UAC3B;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,kBAAkB;UAC9B;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,eAAe;UAC3B;QACF,KAAK,EAAE;QACP,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,kBAAkB;UAC9B;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,YAAY;UACxB;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,eAAe;UAC3B;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,YAAY;UACxB;QACF,KAAK,EAAE;QACP,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,uBAAuB;UACnC;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,YAAY;UACxB;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,eAAe;UAC3B;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,YAAY;UACxB;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,oBAAoB;UAChC;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,uBAAuB;UACnC;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,oBAAoB;UAChC;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,oBAAoB;UAChC;QACF,KAAK,EAAE;UACL,IAAI,CAACA,IAAG,GAAI,oBAAoB;UAChC;QACF;UACE,IAAI,CAACA,IAAG,GAAI,SAAS;UACrB;MACJ;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}