{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_OverallWeather = _resolveComponent(\"OverallWeather\");\n  const _component_WeatherType = _resolveComponent(\"WeatherType\");\n  const _component_WeekForcast = _resolveComponent(\"WeekForcast\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_OverallWeather, {\n    ref: \"OverallWeather\"\n  }, null, 512 /* NEED_PATCH */), _createVNode(_component_WeatherType, {\n    ref: \"WeatherType\"\n  }, null, 512 /* NEED_PATCH */), _createVNode(_component_WeekForcast, {\n    ref: \"WeekForcast\"\n  }, null, 512 /* NEED_PATCH */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_OverallWeather","ref","_component_WeatherType","_component_WeekForcast"],"sources":["C:\\Users\\Tabitha\\projects\\weather-app\\app\\src\\App.vue"],"sourcesContent":["<template>\n  <OverallWeather ref=\"OverallWeather\"/>\n  <WeatherType ref=\"WeatherType\"/>\n  <WeekForcast ref=\"WeekForcast\"/>\n</template>\n\n<script>\nimport OverallWeather from './components/OverallWeather.vue';\nimport WeatherType from './components/WeatherType.vue'\nimport WeekForcast from './components/WeekForcast.vue';\nimport { store } from './shared/store';\n\nexport default {\n  name: 'App',\n  components: {\n    WeatherType,\n    OverallWeather,\n    WeekForcast,\n  },\n  async mounted() {\n    const location = await store.getLocation();\n    console.log('[App] Location: ', location);\n    this.latitude = location.latitude;\n    this.longitude = location.longitude;\n\n    // TODO: add time to consistently update weather\n    const weather = await store.getWeather(this.latitude, this.longitude);\n    console.log('[App] Weather: ', weather);\n    this.$refs.OverallWeather.setWeather(weather);\n    this.$refs.WeatherType.setWeather(weather);\n  },\n  data() {\n    return {\n      latitude: null,\n      longitude: null,\n      location: null\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  display: grid;\n  grid-template-columns: 40% 60%;\n  grid-template-rows: 1fr 1fr;\n  grid-template-areas:\n    \"overallWeather weatherType\"\n    \"weekForcast weatherType\";\n}\n</style>\n"],"mappings":";;;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAsCC,yBAAA;IAAtBC,GAAG,EAAC;EAAgB,gCACpCF,YAAA,CAAgCG,sBAAA;IAAnBD,GAAG,EAAC;EAAa,gCAC9BF,YAAA,CAAgCI,sBAAA;IAAnBF,GAAG,EAAC;EAAa,+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}